---
import { ViewTransitions } from 'astro:transitions';
import BaseHead from '../components/layout/BaseHead.astro';
import Header from '../components/layout/Header.astro';
import HeaderWrapper from '../components/layout/HeaderWrapper.astro';
import Footer from '../components/layout/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

// Import embed components to make them available
import { YouTube } from '@astro-community/astro-embed-youtube';
import { LinkPreview } from '@astro-community/astro-embed-link-preview';

interface Props {
	title?: string;
	description?: string;
	image?: any;
	keywords?: string[];
}

const {
	title = SITE_TITLE,
	description = SITE_DESCRIPTION,
	image,
	keywords
} = Astro.props;

const pageTitle = title === SITE_TITLE ? title : `${title} | ${SITE_TITLE}`;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={pageTitle} description={description} image={image} keywords={keywords} />
		<ViewTransitions />
		<slot name="head" />
	</head>
	<body class="bg-gray-50 dark:bg-gray-950">
		<HeaderWrapper autoHide={false} transition:persist="site-header">
			<Header />
		</HeaderWrapper>
		<main class="mt-10 sm:mt-14" transition:animate="fade">
			<slot />
		</main>
		<Footer transition:persist="site-footer" />
		<script>
			// Global cleanup for LightGallery when navigating away from pages
			function cleanupLightGallery() {
				// Remove unified gallery container
				const unifiedGallery = document.getElementById('unified-lightgallery');
				if (unifiedGallery) {
					unifiedGallery.remove();
				}

				// Remove ALL LightGallery elements (comprehensive cleanup)
				const lgSelectors = [
					'.lg-outer',
					'.lg-backdrop',
					'.lg-container',
					'#lg-backdrop',
					'#lg-outer',
					'[class^="lg-"]',
					'[id^="lg-"]'
				];

				lgSelectors.forEach(selector => {
					const elements = document.querySelectorAll(selector);
					elements.forEach(el => el.remove());
				});

				// Also check for any elements directly attached to body that might be LightGallery-related
				const bodyChildren = Array.from(document.body.children);
				bodyChildren.forEach(child => {
					const el = child as HTMLElement;
					if (el.className && typeof el.className === 'string' && el.className.includes('lg-')) {
						el.remove();
					}
				});

				// Reset initialization flags on all galleries
				const galleries = document.querySelectorAll('astro-lightgallery[data-lg-initialized]');
				galleries.forEach(gallery => {
					gallery.removeAttribute('data-lg-initialized');
				});
			}

			// Cleanup before View Transitions swap
			document.addEventListener('astro:before-swap', cleanupLightGallery);
		</script>
	</body>
</html>
