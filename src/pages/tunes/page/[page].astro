---
import { getCollection } from 'astro:content';
import type { GetStaticPaths } from 'astro';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import PostCard from '../../../components/blog/PostCard.astro';
import Pagination from '../../../components/layout/Pagination.astro';

export const getStaticPaths = (async ({ paginate }) => {
	const postsPerPage = 20;

	const allTunes = (await getCollection('tunes'))
		.filter(tune => !tune.data.draft)
		.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

	const totalPages = Math.ceil(allTunes.length / postsPerPage);

	// Generate paths for pages 2 and onwards (page 1 is handled by /tunes/index.astro)
	return Array.from({ length: totalPages - 1 }, (_, i) => {
		const pageNum = i + 2;
		const start = (pageNum - 1) * postsPerPage;
		const end = start + postsPerPage;

		return {
			params: { page: pageNum.toString() },
			props: {
				tunes: allTunes.slice(start, end),
				currentPage: pageNum,
				totalPages
			}
		};
	});
}) satisfies GetStaticPaths;

const { tunes, currentPage, totalPages } = Astro.props;
---

<BaseLayout title={`Listened to This Week - Page ${currentPage}`} description="My weekly music listening posts - what I've been enjoying on repeat">
	<section class="max-w-3xl mx-auto px-5">
		<div class="mb-12 text-center">
			<h1 class="text-4xl sm:text-5xl lg:text-6xl font-extrabold leading-tight tracking-tight text-gray-900 dark:text-gray-100 mb-4">
				Listened to This Week
			</h1>
			<p class="text-lg text-gray-600 dark:text-gray-400">
				My weekly music discoveries and favorites
			</p>
		</div>

		<ul class="space-y-12">
			{tunes.map((tune) => (
				<li>
					<PostCard post={tune} />
				</li>
			))}
		</ul>

		<Pagination
			currentPage={currentPage}
			totalPages={totalPages}
			getHref={(pageNum) => (pageNum === 1 ? '/tunes/' : `/tunes/page/${pageNum}/`)}
		/>
	</section>
</BaseLayout>
