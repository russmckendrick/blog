---
import Icon from '../ui/Icon.astro';

interface Props {
	currentPage: number;
	totalPages: number;
	getHref: (page: number) => string;
	hideIfSingle?: boolean;
}

const { currentPage, totalPages, getHref, hideIfSingle = true } = Astro.props;

if (hideIfSingle && totalPages <= 1) {
	return;
}

const clamp = (value: number, min: number, max: number) => Math.min(Math.max(value, min), max);

const buildPageList = (current: number, total: number) => {
	const pages: Array<number | 'ellipsis'> = [];
	const showRange = 1; // number of pages to show on each side of current

	const safeTotal = Math.max(total, 1);

	if (safeTotal <= 6) {
		return Array.from({ length: safeTotal }, (_, index) => index + 1);
	}

	const addPage = (page: number) => {
		if (!pages.includes(page)) {
			pages.push(page);
		}
	};

	addPage(1);

	const start = clamp(current - showRange, 2, safeTotal - 1);
	const end = clamp(current + showRange, 2, safeTotal - 1);

	if (start > 2) {
		pages.push('ellipsis');
	}

	for (let page = start; page <= end; page += 1) {
		addPage(page);
	}

	if (end < safeTotal - 1) {
		pages.push('ellipsis');
	}

	if (safeTotal > 1) {
		addPage(safeTotal);
	}

	return pages;
};

const pageItems = buildPageList(currentPage, totalPages);
const previousHref = currentPage > 1 ? getHref(currentPage - 1) : null;
const nextHref = currentPage < totalPages ? getHref(currentPage + 1) : null;
---

<nav class="mt-16" aria-label="Pagination Navigation">
	<div class="flex items-center justify-between border-t border-gray-200 px-4 sm:px-0 dark:border-white/10">
		<div class="-mt-px flex w-0 flex-1">
			{previousHref ? (
				<a
					href={previousHref}
					class="inline-flex items-center border-t-2 border-transparent pt-4 pr-1 text-sm font-medium text-gray-500 visited:text-gray-500 hover:border-gray-300 hover:text-gray-700 visited:hover:text-gray-700 dark:text-gray-400 dark:visited:text-gray-400 dark:hover:border-white/20 dark:hover:text-gray-200 transition-colors"
				>
					<Icon name="arrowLongLeft" size={20} class="mr-3 text-gray-400 dark:text-gray-500" aria-hidden="true" />
					<span>Previous</span>
				</a>
			) : (
				<span class="inline-flex items-center border-t-2 border-transparent pt-4 pr-1 text-sm font-medium text-gray-300 dark:text-gray-600 cursor-not-allowed">
					<Icon name="arrowLongLeft" size={20} class="mr-3 text-gray-300 dark:text-gray-600" aria-hidden="true" />
					Previous
				</span>
			)}
		</div>
		<div class="hidden md:-mt-px md:flex">
			{pageItems.map((item, index) => (
				item === 'ellipsis' ? (
					<span class="inline-flex items-center border-t-2 border-transparent px-4 pt-4 text-sm font-medium text-gray-400" aria-hidden="true">â€¦</span>
				) : (
					<a
						href={getHref(item)}
						class={`inline-flex items-center border-t-2 px-4 pt-4 text-sm font-medium transition-colors ${
							item === currentPage
								? 'border-indigo-500 text-indigo-600 dark:border-indigo-400 dark:text-indigo-400 visited:text-indigo-600 dark:visited:text-indigo-400'
								: 'border-transparent text-gray-500 visited:text-gray-500 hover:border-gray-300 hover:text-gray-700 visited:hover:text-gray-700 dark:text-gray-400 dark:visited:text-gray-400 dark:hover:border-white/20 dark:hover:text-gray-200'
						}`}
						aria-current={item === currentPage ? 'page' : undefined}
					>
						{item}
					</a>
				)
			))}
		</div>
		<div class="-mt-px flex w-0 flex-1 justify-end">
			{nextHref ? (
				<a
					href={nextHref}
					class="inline-flex items-center border-t-2 border-transparent pt-4 pl-1 text-sm font-medium text-gray-500 visited:text-gray-500 hover:border-gray-300 hover:text-gray-700 visited:hover:text-gray-700 dark:text-gray-400 dark:visited:text-gray-400 dark:hover:border-white/20 dark:hover:text-gray-200 transition-colors"
				>
					<span>Next</span>
					<Icon name="arrowLongRight" size={20} class="ml-3 text-gray-400 dark:text-gray-500" aria-hidden="true" />
				</a>
			) : (
				<span class="inline-flex items-center border-t-2 border-transparent pt-4 pl-1 text-sm font-medium text-gray-300 dark:text-gray-600 cursor-not-allowed">
					Next
					<Icon name="arrowLongRight" size={20} class="ml-3 text-gray-300 dark:text-gray-600" aria-hidden="true" />
				</span>
			)}
		</div>
	</div>
	<div class="mt-4 text-center text-sm text-gray-600 dark:text-gray-400">
		Page {currentPage} of {totalPages}
	</div>
</nav>
