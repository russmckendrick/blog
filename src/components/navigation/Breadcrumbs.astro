---
interface BreadcrumbItem {
  label: string;
  url: string;
}

interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;

// Generate breadcrumb schema
const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": items.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.label,
    "item": new URL(item.url, Astro.site).toString()
  }))
};
---

<nav aria-label="Breadcrumb" class="-mt-6 sm:-mt-8 xl:-mt-12 mb-3">
  <ol class="flex items-center gap-2 text-xs">
    {items.map((item, index) => (
      <li class="flex items-center gap-2">
        {index > 0 && <span class="text-gray-400 dark:text-gray-600">/</span>}
        {index === items.length - 1 ? (
          <span class="text-gray-600 dark:text-gray-400">{item.label}</span>
        ) : (
          <a href={item.url} class="text-gray-500 dark:text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 transition-colors">
            {item.label}
          </a>
        )}
      </li>
    ))}
  </ol>
</nav>

<script type="application/ld+json" set:html={JSON.stringify(breadcrumbSchema)} />
